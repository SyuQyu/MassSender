version: "3.9"

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: wbs
      POSTGRES_USER: wbs
      POSTGRES_PASSWORD: wbs
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wbs"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2024-08-17T01-24-54Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: ./backend
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"

  worker:
    build: ./backend
    command: ["python", "-m", "app.worker"]
    env_file: .env
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./backend:/app

  wa_worker:
    build: ./worker
    env_file: .env
    environment:
      - PORT=5005
      - WWEBJS_HEADLESS=true
      - CHROMIUM_PATH=/usr/bin/chromium-browser
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./worker:/app
      - ./.wwebjs_auth:/app/.wwebjs_auth
    ports:
      - "5005:5005"
    command: ["sh", "-c", "npm install && npm run start"]

  frontend:
    build: ./frontend
    env_file: .env
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"

volumes:
  postgres_data:
  redis_data:
  minio_data:
